<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>在宜宾</title>
    <link href="/2024/07/24/Yibin/"/>
    <url>/2024/07/24/Yibin/</url>
    
    <content type="html"><![CDATA[<h5 id="玩"><a href="#玩" class="headerlink" title="玩"></a>玩</h5><p>就在乐山待了一天，在吃了神中神的临江鳝丝之后，就坐高铁赶往宜宾。<br>一开始到宜宾是想吃烧烤：宜宾烧烤还算有点名气，抱着“肯定比成都烧烤实惠”的心态，我点了一个外卖烧烤，<del>然后从22点等到第二天凌晨,味道也一般</del><br>抛去这一点不说，宜宾还是很不错的：有着乐山无法比拟的城建水平，金沙江和长江两岸矗立着许多具有设计感的建筑，也有轨道交通，十分方便。<br>晚上的夜景也不错，至少在三线城市中算得上排头兵了。<br><img src="/2024/07/24/Yibin/IMG_1414.JPG" alt="夹镜楼，夜景"><br><img src="/2024/07/24/Yibin/IMG_1415.JPG" alt="长江之珠和白塔山公园，夜景,高糊"><br><img src="/2024/07/24/Yibin/IMG_1418.JPG" alt="人群与两江交界处，夜景"></p><p>当然，在白天也拍了一些东西，主要是建筑：<br><img src="/2024/07/24/Yibin/IMG_1422.JPG" alt="南门大桥"><br><img src="/2024/07/24/Yibin/IMG_1411.JPG" alt="钟鼓楼"><br><img src="/2024/07/24/Yibin/IMG_1401.JPG" alt="冠英古街的一栋老楼"></p><p>第二天，去李庄古镇，做表面兄弟。<br>这古镇就是一个普通的古镇，之前是抗战同济大学的驻地，普普通通，到处都是商铺，过度商业化。<br>我一向对于过度商业化的古镇兴趣不大，即使这是绝大多数古镇最后的结局。<br>上两张仿古&#x2F;翻新建筑的图吧。</p><p><img src="/2024/07/24/Yibin/IMG_1424.JPG" alt="五粮液李庄文化体验馆"><br><img src="/2024/07/24/Yibin/IMG_1428.JPG" alt="天后宫"></p><h5 id="吃"><a href="#吃" class="headerlink" title="吃"></a>吃</h5><p>宜宾最出名的东西莫过于他的燃面：确实好吃，跟外面卖的不同，给人一种确实燃得起来的感觉。<br><img src="/2024/07/24/Yibin/IMG_1421.JPG" alt="宜宾燃面"><br>李庄最出名的东西莫过于李庄白肉，也还算不错。<br><code>现在李庄白肉比拼的早就不是什么味道...比拼的是如何将肉切得更薄的噱头，无聊之至！有那时间端着肉在街上现片，不如研究一下怎么把蘸水弄得更好吃</code><br><img src="/2024/07/24/Yibin/IMG_1430.JPG" alt="李庄白肉"><br>还去了一家茶馆，由之前的民居改造而来。茶味道还行，环境也还行，价格不太行。<br><img src="/2024/07/24/Yibin/IMG_1434.JPG" alt="茶和书"><br><img src="/2024/07/24/Yibin/IMG_1435.JPG" alt="环境"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Trips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>乐山的游与吃</title>
    <link href="/2024/07/24/Leshan/"/>
    <url>/2024/07/24/Leshan/</url>
    
    <content type="html"><![CDATA[<p>乐山作为老牌旅游城市，在成都读大学的怎么能不去呢。<br>于是在清明，直接坐火车，来了。<br>乐山的出租车之便宜是我对这座城市的第一印象，这恰恰说明政府的一片苦心。规模不大的城市有着不小的商业区，也是拜游客所致。</p><h5 id="吃"><a href="#吃" class="headerlink" title="吃"></a>吃</h5><p>乐山美食可多：跷脚牛肉，临江鳝丝，甜皮鸭，豆腐脑，样样有特色。除了绵绵冰没有品尝之外（实在是塞不进了），都尝了。<br>以下判断基于作者个人观点：<br>5⭐：跷脚牛肉，临江鳝丝<br>    跷脚牛肉跟我的想象完全不同：它似乎是用汤底（不辣）刷一会牛肉或者牛的其他部位做成的，如果你不沾辣椒的话能够吃出浓郁的肉汤的香味。我去的这家店还送了血旺，也十分好吃。<br>    <img src="/2024/07/24/Leshan/IMG_1367.JPG" alt="翘脚牛肉，牛杂，黄喉"><br>    <img src="/2024/07/24/Leshan/IMG_1366.JPG" alt="血旺"><br>    临江鳝丝：这个更是香绝，鳝丝非常新鲜，汤底纵然稍显重但是仍然吃的出来鳝丝的鲜香，赠送的炸鳝鱼骨跟薯条似的脆脆，咸香口，好吃。<br>    <img src="/2024/07/24/Leshan/IMG_1396.JPG" alt="临江 鳝丝"><br>    <img src="/2024/07/24/Leshan/IMG_1397.JPG" alt="炸鳝鱼骨"><br>3⭐：甜皮鸭，豆腐脑<br>    这两个东西就没有前两种菜来的好吃，可能是我店子挑得不好。<br>    甜皮鸭是外皮甜而内部香，内部有香料味，还行但是我不是很喜欢；<br>    而豆腐脑感觉底下的咸味和上面料的味道不太融合（这家大概率是我挑的的问题，我的自贡朋友直呼没见过）<br>    <img src="/2024/07/24/Leshan/IMG_1378.JPG" alt="豆腐脑"><br>    <img src="/2024/07/24/Leshan/IMG_1380.JPG" alt="甜皮鸭"></p><h5 id="玩"><a href="#玩" class="headerlink" title="玩"></a>玩</h5><p>乐山大佛：没坐船也没去，就是一个普通的泥巴塑像，在冬泳协会修的河边平台上远观即可。<br><img src="/2024/07/24/Leshan/IMG_1365.JPG" alt="乐山大佛，手机远焦模糊版"><br>剩下两张是在老城里新修的商业街区拍的，氛围还不错。<br><img src="/2024/07/24/Leshan/IMG_1368.JPG" alt="乐山商业街"><br><img src="/2024/07/24/Leshan/IMG_1370.JPG" alt="乐山商业街"><br>最后一张照片拍摄于乌木博物馆，主打的就是购物和迷信消费，这种黑心景区能评上4a也是神了。<br><img src="/2024/07/24/Leshan/IMG_1393.JPG" alt="你说你看到乌木雕的十二生肖被放在罗马大澡堂里面，能不笑也是神了"><br>最后写了一点东西，乐意看的可以看看：</p><h5 id="关于乐山"><a href="#关于乐山" class="headerlink" title="关于乐山"></a>关于乐山</h5><p>乐山整个城区都位于大渡河和岷江中间，似乎没有朝对岸发展的打算。这也不奇怪：岷江对面是乐山大佛，大渡河对面是佛正对着的地方。如果到对岸去，怎么赚游客的观佛之礼！老城区有着一些老物件，你也可以从中窥探到一些过去时代的影子：城墙，楼阁，对面的大佛……商业区的各种孃字结尾的跷脚牛肉店也有意无意地显摆着他们的历史。但是有历史也不全是好事：拥堵且弯弯绕绕的主干道，稍显破旧的商业区，狭窄的小巷子，偏偏旅游人气旺盛催生出一大批计程车司机，就显得更加局促。<br>也就是在这样的地方，川渝人的松弛感得以展现。冬泳协会的大爷在大渡河中来去自如，上方的小广场支上几张桌子就可以喝茶打牌，卖小食的小贩也可同时对弈两局。而在新城区，就看不到这样的景象。乐山西北面的新城区同任何一个南方城市的新城区别无二致：一个万达广场，一些小区和酒店，乏味到有些割裂。这样的割裂既关于城市，又关于时代。现在看到的悠闲景象，在不久的将来也许就是绝景。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Trips</tag>
      
      <tag>Thoughts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>莲宝叶则景区</title>
    <link href="/2024/07/24/Lianbaoyeze/"/>
    <url>/2024/07/24/Lianbaoyeze/</url>
    
    <content type="html"><![CDATA[<p>莲宝叶则景区有着成规模的冰川地貌，独特的景色在适当的天气，季节以及滤镜加持下应该会很好看，只可惜本人没有赶着最好的季节来玩。<br>角峰，冰碛湖，冰川漂砾，让人直呼过瘾，滤镜加持下用无人机拍公路片有一种中土的感觉。<br>但是本人并没有带无人机，有点遗憾吧。<br><strong>推荐的季节：6-9月</strong><br>住宿：本人住在阿坝县，开车过去也就1个小时差不多，景区的路可以直达山顶。路边的各莫寺可以去看看。<br>上图：</p><p><img src="/2024/07/24/Lianbaoyeze/IMG_0289.JPG" alt="莲宝叶则，角峰"><br><img src="/2024/07/24/Lianbaoyeze/IMG_0295.JPG" alt="莲宝叶则，角峰，湖泊，蓝天"><br><img src="/2024/07/24/Lianbaoyeze/IMG_0299.JPG" alt="莲宝叶则，角峰，调色"><br><img src="/2024/07/24/Lianbaoyeze/IMG_0300.JPG" alt="莲宝叶则，角峰"><br><img src="/2024/07/24/Lianbaoyeze/IMG_0301.JPG" alt="莲宝叶则，角峰和冰碛湖"><br><img src="/2024/07/24/Lianbaoyeze/IMG_0302.JPG" alt="莲宝叶则，角峰和玛尼堆"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Trips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小城记   阿坝县</title>
    <link href="/2024/07/23/ABaTravel/"/>
    <url>/2024/07/23/ABaTravel/</url>
    
    <content type="html"><![CDATA[<p>阿坝县位于三省交界，民族复杂，一时半会儿分不清楚，但进城第一眼和川西其他县不太一样的就是恢宏的寺院。阿坝县城就有三个寺院，几乎所有村落都有寺院。藏传佛教信仰浓厚，光在县城里都可体会，遑论本地的藏族村落。最出名的寺有两个：各莫寺和格尔登寺。<br>各莫寺位于阿坝县各莫镇，是由一位国外华人老板斥资数亿修成，以求“精神上的平安”。寺院恢宏，金顶居中琉璃为辅，屋檐有飞雕彩饰，墙上有朱漆壁画，大殿外有刚栽种的园艺树木，大殿内划定了游客通道以供参观。游客通道的一旁，一布之隔就是正在修行的僧人。宝殿的镀金大佛下有着贴有二维码的功德箱，大殿有各种展品以供参观。一切都与内地的寺庙别无二致。<br>而格尔登寺则位于阿坝县中心，看起来普普通通。寺庙外围是很长的转经筒，游客可以在此转经，而寺庙的绝大部分不对外开放。只能拜托本地的师傅把我们捎带进去。大殿门外有空空如也的棚子作为辩经场，地上许多祈祷用的纸片，大殿里面稍显陈旧，中间有一把交椅，上面放着大活佛的照片。<br>格尔登寺里面有一个特产——格尔登寺寺庙管理委员会。寺的大门外就是一个警察局，寺外更是五步一哨十步一亭，县城里有军分区和小营房，县城外的山上还有几座碉堡，炮口正对着格尔登寺。<br>究其原因还是与十几年前发生的一件可怜事有关。西藏的僧人在3月十四号闹了点动静，阿坝县的僧人觉得受到了什么“不公正的对待”，于是就像从古到今常有的事那样，想要获得一点小小的特殊与自由。寺院的一千多人与地方闹了点不愉快，别的县的人手分分过来增援，僧人们自然败下阵来。<br>从此这个县城多了一些警察局，多了一个营房和几个碉堡，多了一个委员会。寺庙再没有来自大人物的投入，只有牧民的捐赠。<br>近几年随着旅游业的发展，阿坝的服务业丰富起来。今日路过格尔登寺时，寺院门口不远处有一家蜜雪冰城，放着熟悉的“歌曲”，旁边则是三三两两的僧人走过。<br>强烈的对比使人耳晕目眩。</p><p><img src="/2024/07/23/ABaTravel/IMG_0305.png" alt="各莫寺"> </p><p><img src="/2024/07/23/ABaTravel/IMG_0306.png" alt="各莫寺"> </p><p><img src="/2024/07/23/ABaTravel/IMG_0307.png" alt="各莫寺"> </p><p><img src="/2024/07/23/ABaTravel/IMG_0308.png" alt="各莫寺"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>Trips</tag>
      
      <tag>Thoughts</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python 编写的HLTV网站选手数据页面爬取脚本</title>
    <link href="/2024/07/23/hltv/"/>
    <url>/2024/07/23/hltv/</url>
    
    <content type="html"><![CDATA[<style>pre {  overflow-y: auto;  max-height: 600px;}</style><div class="code-wrapper"><pre><code class="hljs cpp">what can i sayhltv out</code></pre></div><h3 id="1-环境说明"><a href="#1-环境说明" class="headerlink" title="1.环境说明"></a>1.环境说明</h3><p>代码使用的环境为vscode+conda，python版本为3.11，环境配置参照其他博主写的安装教程安装即可。<br>本代码使用了 Undetected_chromedriver用于绕开hltv的clloudflare反爬， 可以直接在终端使用<code>conda install conda-forge::undetected-chromedriver</code>安装插件。<br>本代码使用了 openpyxl用于生成选手数据表格 ， 可以直接在终端使用<code>conda install anaconda::openpyxl</code>安装插件。</p><h3 id="2-代码介绍"><a href="#2-代码介绍" class="headerlink" title="2.代码介绍"></a>2.代码介绍</h3><p>首先介绍一下这个undetected_Chormedriver.它的使用方法和Selenium十分类似，但是有着更加出色的反爬虫能力。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#对于想要获得源码的人来说，只需要这几行就够了</span>driver = uc.Chrome() driver.get(<span class="hljs-string">&quot;网址&quot;</span>) content = driver.page_source</code></pre></div><p>首先是导入部分和插件的基础设置：</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-keyword">import</span> re <span class="hljs-keyword">import</span> os <span class="hljs-keyword">from</span> openpyxl <span class="hljs-keyword">import</span> Workbook<span class="hljs-keyword">import</span> undetected_chromedriver <span class="hljs-keyword">as</span> uc<span class="hljs-keyword">import</span> timewb = Workbook()ws = wb.activedriver = uc.Chrome()</code></pre></div><p>然后是一个可以更改的初始状态区，用于列出需要筛选的赛事</p><div class="code-wrapper"><pre><code class="hljs py">webfront=<span class="hljs-string">&quot;https://www.hltv.org/stats/players&quot;</span><span class="hljs-comment">#默认头，无需更改</span><span class="hljs-comment">#赛事筛选，在hltv筛选器中筛选后复制？之后的文字</span>eventfilter=<span class="hljs-string">&quot;?startDate=all&amp;event=7732&amp;event=7552&amp;event=7551&amp;event=7435&amp;event=7258&amp;event=7578&amp;event=7261&amp;event=7260&amp;event=7259&amp;event=7577&amp;event=7148&amp;event=7437&amp;event=7440&amp;event=7755&amp;event=7438&amp;event=7475&amp;event=7485&quot;</span>keyword = <span class="hljs-string">&quot;&gt;&quot;</span> <span class="hljs-comment">#用于清除rating和name之前的一些多余字符</span>supereliteevent = [<span class="hljs-string">&quot;&amp;event=7435&quot;</span>,<span class="hljs-string">&quot;&amp;event=7148&quot;</span>] <span class="hljs-comment">#手动添加超级精英赛事编号，按照格式</span>eliteevent = [<span class="hljs-string">&quot;&amp;event=7732&quot;</span>]  <span class="hljs-comment">#手动添加精英赛事编号，按照格式</span>bigevent = [<span class="hljs-string">&quot;&amp;event=7437&quot;</span>,<span class="hljs-string">&quot;&amp;event=7440&quot;</span>,<span class="hljs-string">&quot;&amp;event=7438&quot;</span>,<span class="hljs-string">&quot;&amp;event=7485&quot;</span>] <span class="hljs-comment">#手动添加大型赛事编号，按照格式</span>supereliteeventplayoff = [<span class="hljs-string">&quot;&amp;startDate=2024-02-09&amp;endDate=2024-02-12&quot;</span>,<span class="hljs-string">&quot;&amp;startDate=2024-03-28&amp;endDate=2024-04-02&quot;</span>] <span class="hljs-comment">#用于筛选淘汰赛</span>eliteeventplayoff = [<span class="hljs-string">&quot;&amp;startDate=2024-07-18&amp;endDate=2024-07-22&amp;bestOfX=BestOf3&quot;</span>] <span class="hljs-comment">#石油杯比较特殊，淘汰赛和小组赛在同一天，所以用bo3筛选</span>bigeventplayoff = [<span class="hljs-string">&quot;&amp;startDate=2024-04-11&amp;endDate=2024-04-14&quot;</span>,<span class="hljs-string">&quot;&amp;startDate=2024-05-09&amp;endDate=2024-05-13&quot;</span>,<span class="hljs-string">&quot;&amp;startDate=2024-05-31&amp;endDate=2024-06-03&quot;</span>,<span class="hljs-string">&quot;&amp;startDate=2024-06-15&amp;endDate=2024-06-17&quot;</span>] <span class="hljs-comment">#大型赛事淘汰赛</span><span class="hljs-comment">#用于填写表格的第一行</span>description = [<span class="hljs-string">&quot;选手ID&quot;</span>,<span class="hljs-string">&quot;图池数&quot;</span>,<span class="hljs-string">&quot;rating&quot;</span>,<span class="hljs-string">&quot;rounds&quot;</span>,<span class="hljs-string">&quot;CTrating&quot;</span>,<span class="hljs-string">&quot;Trating&quot;</span>,<span class="hljs-string">&quot;首杀尝试&quot;</span>,<span class="hljs-string">&quot;首杀成功&quot;</span>,<span class="hljs-string">&quot;首杀rating&quot;</span>,<span class="hljs-string">&quot;手枪局rating&quot;</span>,<span class="hljs-string">&quot;DPR&quot;</span>,<span class="hljs-string">&quot;KAST&quot;</span>,<span class="hljs-string">&quot;IMPACT&quot;</span>,<span class="hljs-string">&quot;ADR&quot;</span>,<span class="hljs-string">&quot;KPR&quot;</span>,<span class="hljs-string">&quot;map vs top5&quot;</span>,<span class="hljs-string">&quot;rating vs top5&quot;</span>,<span class="hljs-string">&quot;map vs top10&quot;</span>,<span class="hljs-string">&quot;rating vs top10&quot;</span>,<span class="hljs-string">&quot;首杀次数&quot;</span>,<span class="hljs-string">&quot;0kill&quot;</span>,<span class="hljs-string">&quot;1kill&quot;</span>,<span class="hljs-string">&quot;2kill&quot;</span>,<span class="hljs-string">&quot;3kill&quot;</span>,<span class="hljs-string">&quot;4kill&quot;</span>,<span class="hljs-string">&quot;5kill&quot;</span>,<span class="hljs-string">&quot;0.85+&quot;</span>,<span class="hljs-string">&quot;1.00+&quot;</span>,<span class="hljs-string">&quot;1.15+&quot;</span>,<span class="hljs-string">&quot;1.30+&quot;</span>,<span class="hljs-string">&quot;1v1&quot;</span>,<span class="hljs-string">&quot;1v2&quot;</span>,<span class="hljs-string">&quot;1v3&quot;</span>,<span class="hljs-string">&quot;1v4&quot;</span>,<span class="hljs-string">&quot;1v5&quot;</span>,<span class="hljs-string">&quot;big event map&quot;</span>,<span class="hljs-string">&quot;big event rating&quot;</span>,<span class="hljs-string">&quot;elite event map&quot;</span>,<span class="hljs-string">&quot;elite event rating&quot;</span>,<span class="hljs-string">&quot;superelite event map&quot;</span>,<span class="hljs-string">&quot;supereliteevent rating&quot;</span>,<span class="hljs-string">&quot;big event playoff map&quot;</span>,<span class="hljs-string">&quot;big event playoff rating&quot;</span>,<span class="hljs-string">&quot;elite event playoff map&quot;</span>,<span class="hljs-string">&quot;elite event playoff rating&quot;</span>,<span class="hljs-string">&quot;superelite event playoff map&quot;</span>,<span class="hljs-string">&quot;superelite event playoff rating&quot;</span>,<span class="hljs-string">&quot;win map rating&quot;</span>]ws.append(description) <span class="hljs-comment">#上传表格的第一行</span>minMapCountfilter=<span class="hljs-string">&quot;&amp;minMapCount=45&quot;</span> <span class="hljs-comment"># 图池数筛选器，更改数字使用</span>minrating = <span class="hljs-number">1.09</span> <span class="hljs-comment">#大于此数的选手rating纳入统计</span>file_path = os.path.join(<span class="hljs-string">&quot;E:\\hltv&quot;</span>, <span class="hljs-string">&quot;rating.xlsx&quot;</span>) <span class="hljs-comment">#表格文件保存路径，根据需要更改</span></code></pre></div><p>之后就是列表整体数据的爬取时间~</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment"># 普通rating，图池</span>driver.get(webfront+eventfilter+minMapCountfilter) time.sleep(<span class="hljs-number">5.3547</span>) <span class="hljs-comment">#可加可不加，加了提前点不需要rookie爬的会快一些</span>content = driver.page_source Name = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Mapcount = re.findall(<span class="hljs-string">&#x27;&lt;/span&gt;&lt;/td&gt;\n                    &lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)Rating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)Id = re.findall(<span class="hljs-string">&#x27;&lt;a href=&quot;/stats/players(.*?)&quot; data-tooltip-id=&quot;uniqueTooltipId&#x27;</span>,content)Rounds = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail gtSmartphone-only&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)<span class="hljs-comment">#名字和rating的数据清理</span>tempzz = <span class="hljs-number">0</span><span class="hljs-keyword">while</span> tempzz &lt; <span class="hljs-built_in">len</span>(Name):    Name[tempzz]=Name[tempzz].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()    Rating[tempzz]=Rating[tempzz].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()    tempzz = tempzz + <span class="hljs-number">1</span></code></pre></div><p>解释一下为什么需要后面的这个while循环：hltv会生成一个uniquetooltipid，这个ID会随着每一次进入网页而变化。我们通过这种方式将以只后数据前的<code>&gt;</code>作为指针，切断之前的所有字符，从而得到一个美丽的数据。</p><p>接下来的T方rating和CT方rating同上述如出一辙。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#CT</span>driver.get(webfront+eventfilter+<span class="hljs-string">&quot;&amp;side=COUNTER_TERRORIST&quot;</span>+minMapCountfilter) content = driver.page_sourceCTname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)CTrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)<span class="hljs-comment">#T</span>driver.get(webfront+eventfilter+<span class="hljs-string">&quot;&amp;side=TERRORIST&quot;</span>+minMapCountfilter) content = driver.page_sourceTname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Trating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)</code></pre></div><p>然后是首杀。这里首杀会爬取到表格中其他的数据，因而在爬出的数据中筛选一下：</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#openingkill</span>driver.get(webfront+<span class="hljs-string">&quot;/openingkills&quot;</span>+eventfilter+minMapCountfilter)content = driver.page_sourceok = re.findall(<span class="hljs-string">&#x27;class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)Openingkillrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)Openingkillname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)count=<span class="hljs-number">0</span>Openingkillattempts=[]Openingkillsuccess=[]<span class="hljs-comment"># 筛选数据</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> ok:    <span class="hljs-keyword">if</span> count%<span class="hljs-number">4</span> == <span class="hljs-number">2</span>:        Openingkillattempts.append(i)    <span class="hljs-keyword">if</span> count%<span class="hljs-number">4</span> == <span class="hljs-number">3</span>:        Openingkillsuccess.append(i)    count+=<span class="hljs-number">1</span></code></pre></div><p>手枪局的爬取也毫无亮点。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#手枪局</span>driver.get(webfront+<span class="hljs-string">&quot;/pistols&quot;</span>+eventfilter+minMapCountfilter) content = driver.page_sourcePistolname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Pistolrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)</code></pre></div><p>这里的数据其实也是“不干净的”，但是我们可以在录入之时在将他洗干净，所以Never mind.<br>然后就是Big event。HLTV提供了Big event的筛子，可以直接放心使用。为此我们在打开网址中加入<code>&amp;matchType=BigEvents</code>。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#Bigevent</span>driver.get(webfront+eventfilter+<span class="hljs-string">&quot;&amp;matchType=BigEvents&quot;</span>+<span class="hljs-string">&quot;&amp;minMapCount=0&quot;</span>)content = driver.page_sourceBigeventname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Bigeventmap = re.findall(<span class="hljs-string">&#x27;&lt;/span&gt;&lt;/td&gt;\n                    &lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)Bigeventrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)</code></pre></div><p>supereliteevent 和 eliteevent 就没有这么简单了：我们需要定制filter为其使用。遍历时将这些条件都填充入网址中：</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#Supereliteevent</span>tempfilter = <span class="hljs-string">&quot;?startDate=all&quot;</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> supereliteevent:    tempfilter = tempfilter + idriver.get(webfront+tempfilter+<span class="hljs-string">&quot;&amp;minMapCount=0&quot;</span>)content = driver.page_sourceSupereliteeventname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Supereliteeventmap = re.findall(<span class="hljs-string">&#x27;&lt;/span&gt;&lt;/td&gt;\n                    &lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)Supereliteeventrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)<span class="hljs-comment">#Eliteevent</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> eliteevent:    tempfilter = tempfilter + idriver.get(webfront+tempfilter+<span class="hljs-string">&quot;&amp;minMapCount=0&quot;</span>)content = driver.page_sourceEliteeventname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)Eliteeventmap = re.findall(<span class="hljs-string">&#x27;&lt;/span&gt;&lt;/td&gt;\n                    &lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)Eliteeventrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)</code></pre></div><p>接下来是最令人头痛的淘汰赛。由于HLTV没有给出筛选选项，因此我们只能退而求其次使用time filter筛选出淘汰赛的日期。<br><code>然后就发现电竞世界杯小组赛淘汰赛同一天开打，只能使用BO3筛选。下次小组赛都是BO3的话就只能爬单场比赛了qwq</code></p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#supereliteeventplayoff</span>Supereliteeventplayoffname = []Supereliteeventplayoffmap = []Supereliteeventplayoffratingsum = []Supereliteeventplayoffrounds = []<span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(supereliteevent,supereliteeventplayoff):    driver.get(webfront+<span class="hljs-string">&quot;?&quot;</span>+i+j)    content = driver.page_source    supereliteeventplayofftempname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)    supereliteeventplayofftempmap = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    supereliteeventplayoffrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)    supereliteeventplayoffrounds = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail gtSmartphone-only&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    supereliteeventplayoffmap = []    supereliteeventplayoffname = []    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt;<span class="hljs-built_in">len</span>(supereliteeventplayofftempmap):        <span class="hljs-keyword">if</span> tempzz2 ==<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> tempzz2%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:            supereliteeventplayoffmap.append(supereliteeventplayofftempmap[tempzz2])            supereliteeventplayoffname.append(supereliteeventplayofftempname[tempzz2])        tempzz2 =tempzz2+<span class="hljs-number">1</span>    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt; <span class="hljs-built_in">len</span>(supereliteeventplayoffname):        supereliteeventplayoffname[tempzz2]=supereliteeventplayoffname[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        supereliteeventplayoffrating[tempzz2]=supereliteeventplayoffrating[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        tempzz2 = tempzz2 + <span class="hljs-number">1</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(supereliteeventplayoffname,supereliteeventplayoffmap,supereliteeventplayoffrating,supereliteeventplayoffrounds):        <span class="hljs-comment">#过滤异常数据</span>        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        belong = <span class="hljs-number">0</span>        tempzz1 = <span class="hljs-number">0</span>        <span class="hljs-keyword">while</span> tempzz1 &lt; <span class="hljs-built_in">len</span>(Supereliteeventplayoffname):            <span class="hljs-keyword">if</span> Supereliteeventplayoffname[tempzz1] == name1:                Supereliteeventplayoffmap[tempzz1] = Supereliteeventplayoffmap[tempzz1] + <span class="hljs-built_in">float</span>(map1)                Supereliteeventplayoffratingsum[tempzz1] = Supereliteeventplayoffratingsum[tempzz1] + (<span class="hljs-built_in">float</span>(rating1) * <span class="hljs-built_in">float</span>(round1))                Supereliteeventplayoffrounds[tempzz1] = Supereliteeventplayoffrounds[tempzz1] + <span class="hljs-built_in">float</span>(round1)                belong = <span class="hljs-number">1</span>                <span class="hljs-keyword">break</span>            tempzz1 = tempzz1 + <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> belong == <span class="hljs-number">0</span>:            Supereliteeventplayoffname.append(name1)            Supereliteeventplayoffmap.append(<span class="hljs-built_in">float</span>(map1))            Supereliteeventplayoffratingsum.append(<span class="hljs-built_in">float</span>(round1)*<span class="hljs-built_in">float</span>(rating1))            Supereliteeventplayoffrounds.append(<span class="hljs-built_in">float</span>(round1))<span class="hljs-comment">#eliteeventplayoff</span>tempzz3 = <span class="hljs-number">0</span>Eliteeventplayoffname = []Eliteeventplayoffmap = []Eliteeventplayoffratingsum = []Eliteeventplayoffrounds = []<span class="hljs-keyword">while</span> tempzz3 &lt; <span class="hljs-built_in">len</span>(Supereliteeventplayoffname):    Eliteeventplayoffname.append(Supereliteeventplayoffname[tempzz3])    Eliteeventplayoffmap.append(Supereliteeventplayoffmap[tempzz3])    Eliteeventplayoffratingsum.append(Supereliteeventplayoffratingsum[tempzz3])    Eliteeventplayoffrounds.append(Supereliteeventplayoffrounds[tempzz3])    tempzz3 = tempzz3 + <span class="hljs-number">1</span>tempzz3 = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(eliteevent,eliteeventplayoff):    driver.get(webfront+<span class="hljs-string">&quot;?&quot;</span>+i+j)    content = driver.page_source    eliteeventplayofftempname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)    eliteeventplayofftempmap = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    eliteeventplayoffrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)    eliteeventplayoffrounds = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail gtSmartphone-only&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    eliteeventplayoffmap = []    eliteeventplayoffname = []    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt;<span class="hljs-built_in">len</span>(eliteeventplayofftempmap):        <span class="hljs-keyword">if</span> tempzz2 ==<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> tempzz2%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:            eliteeventplayoffmap.append(eliteeventplayofftempmap[tempzz2])            eliteeventplayoffname.append(eliteeventplayofftempname[tempzz2])        tempzz2 =tempzz2+<span class="hljs-number">1</span>    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt; <span class="hljs-built_in">len</span>(eliteeventplayoffname):        eliteeventplayoffname[tempzz2]=eliteeventplayoffname[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        eliteeventplayoffrating[tempzz2]=eliteeventplayoffrating[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        tempzz2 = tempzz2 + <span class="hljs-number">1</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(eliteeventplayoffname,eliteeventplayoffmap,eliteeventplayoffrating,eliteeventplayoffrounds):        <span class="hljs-comment">#过滤异常数据</span>        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        belong = <span class="hljs-number">0</span>        tempzz1 = <span class="hljs-number">0</span>        <span class="hljs-keyword">while</span> tempzz1 &lt; <span class="hljs-built_in">len</span>(Eliteeventplayoffname):            <span class="hljs-keyword">if</span> Eliteeventplayoffname[tempzz1] == name1:                Eliteeventplayoffmap[tempzz1] = Eliteeventplayoffmap[tempzz1] + <span class="hljs-built_in">float</span>(map1)                Eliteeventplayoffratingsum[tempzz1] = Eliteeventplayoffratingsum[tempzz1] + (<span class="hljs-built_in">float</span>(rating1) * <span class="hljs-built_in">float</span>(round1))                Eliteeventplayoffrounds[tempzz1] = Eliteeventplayoffrounds[tempzz1] +<span class="hljs-built_in">float</span>(round1)                belong = <span class="hljs-number">1</span>                <span class="hljs-keyword">break</span>            tempzz1 = tempzz1 + <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> belong == <span class="hljs-number">0</span>:            Eliteeventplayoffname.append(name1)            Eliteeventplayoffmap.append(<span class="hljs-built_in">float</span>(map1))            Eliteeventplayoffratingsum.append(<span class="hljs-built_in">float</span>(round1)*<span class="hljs-built_in">float</span>(rating1))            Eliteeventplayoffrounds.append(<span class="hljs-built_in">float</span>(round1))<span class="hljs-comment">#Bigeventplayoff</span>tempzz3 = <span class="hljs-number">0</span>Bigeventplayoffname = []Bigeventplayoffmap = []Bigeventplayoffratingsum = []Bigeventplayoffrounds = []<span class="hljs-keyword">while</span> tempzz3 &lt; <span class="hljs-built_in">len</span>(Eliteeventplayoffname):    Bigeventplayoffname.append(Eliteeventplayoffname[tempzz3])    Bigeventplayoffmap.append(Eliteeventplayoffmap[tempzz3])    Bigeventplayoffratingsum.append(Eliteeventplayoffratingsum[tempzz3])    Bigeventplayoffrounds.append(Eliteeventplayoffrounds[tempzz3])    tempzz3 = tempzz3 +<span class="hljs-number">1</span>tempzz3 = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> i,j <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(bigevent,bigeventplayoff):    driver.get(webfront+<span class="hljs-string">&quot;?&quot;</span>+i+j)    content = driver.page_source    bigeventplayofftempname = re.findall(<span class="hljs-string">&#x27;data-tooltip-id=&quot;uniqueTooltipId-(.*?)&lt;/a&gt;&lt;/td&gt;&#x27;</span>,content)    bigeventplayofftempmap = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    bigeventplayoffrating = re.findall(<span class="hljs-string">&#x27;class=&quot;ratingCol(.*?)&lt;/td&gt;&#x27;</span>,content)    bigeventplayoffrounds = re.findall(<span class="hljs-string">&#x27;&lt;td class=&quot;statsDetail gtSmartphone-only&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    bigeventplayoffmap = []    bigeventplayoffname = []    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt;<span class="hljs-built_in">len</span>(bigeventplayofftempmap):        <span class="hljs-keyword">if</span> tempzz2 ==<span class="hljs-number">0</span> <span class="hljs-keyword">or</span> tempzz2%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>:            bigeventplayoffmap.append(bigeventplayofftempmap[tempzz2])            bigeventplayoffname.append(bigeventplayofftempname[tempzz2])        tempzz2 =tempzz2+<span class="hljs-number">1</span>    tempzz2 = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> tempzz2 &lt; <span class="hljs-built_in">len</span>(bigeventplayoffname):        bigeventplayoffname[tempzz2]=bigeventplayoffname[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        bigeventplayoffrating[tempzz2]=bigeventplayoffrating[tempzz2].split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        tempzz2 = tempzz2 + <span class="hljs-number">1</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(bigeventplayoffname,bigeventplayoffmap,bigeventplayoffrating,bigeventplayoffrounds):        <span class="hljs-comment">#过滤异常数据</span>        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        belong = <span class="hljs-number">0</span>        tempzz1 = <span class="hljs-number">0</span>        <span class="hljs-keyword">while</span> tempzz1 &lt; <span class="hljs-built_in">len</span>(Bigeventplayoffname):            <span class="hljs-keyword">if</span> Bigeventplayoffname[tempzz1] == name1:                                Bigeventplayoffmap[tempzz1] = Bigeventplayoffmap[tempzz1] + <span class="hljs-built_in">float</span>(map1)                Bigeventplayoffratingsum[tempzz1] = Bigeventplayoffratingsum[tempzz1] + (<span class="hljs-built_in">float</span>(rating1) * <span class="hljs-built_in">float</span>(round1))                Bigeventplayoffrounds[tempzz1] = Bigeventplayoffrounds[tempzz1] +<span class="hljs-built_in">float</span>(round1)                belong = <span class="hljs-number">1</span>                <span class="hljs-keyword">break</span>            tempzz1 = tempzz1 + <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> belong == <span class="hljs-number">0</span>:            Bigeventplayoffname.append(name1)            Bigeventplayoffmap.append(<span class="hljs-built_in">float</span>(map1))            Bigeventplayoffratingsum.append(<span class="hljs-built_in">float</span>(rating1)*<span class="hljs-built_in">float</span>(round1))            Bigeventplayoffrounds.append(<span class="hljs-built_in">float</span>(round1))</code></pre></div><p>接下来统计选手个人页面数据。先是一些简单的加入上传列表：</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#选手个人数据统计和打印</span><span class="hljs-keyword">for</span> name,mapcount,rating,<span class="hljs-built_in">id</span>,rounds <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Name,Mapcount,Rating,Id,Rounds):    <span class="hljs-comment">#加入选手姓名，图池数，rating，回合数（用于计算）</span>    row = [name,mapcount,rating,rounds]    ratingnum = <span class="hljs-built_in">float</span>(rating)    <span class="hljs-keyword">if</span> ratingnum &lt;= minrating:        <span class="hljs-keyword">break</span>    <span class="hljs-comment">#上传CTrating</span>    <span class="hljs-keyword">for</span> name1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(CTname,CTrating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(rating1)            <span class="hljs-keyword">break</span>    <span class="hljs-comment">#上传Trating</span>    <span class="hljs-keyword">for</span> name1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Tname,Trating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(rating1)            <span class="hljs-keyword">break</span>    <span class="hljs-comment">#上传首杀相关数据（回合首杀在选手个人页面中）</span>    <span class="hljs-keyword">for</span> openingkillname,openingkillattempts,openingkillsuccess,openingkillrating <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Openingkillname,Openingkillattempts,Openingkillsuccess,Openingkillrating):        openingkillname=openingkillname.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        openingkillrating=openingkillrating.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> openingkillname == name:            row.append(openingkillattempts)            row.append(openingkillsuccess)            row.append(openingkillrating)            <span class="hljs-keyword">break</span>    <span class="hljs-comment">#上传手枪局rating</span>    <span class="hljs-keyword">for</span> name1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Pistolname,Pistolrating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(rating1)            <span class="hljs-keyword">break</span></code></pre></div><p>完事了之后直接进入选手个人数据页面。<code>这里又有两个小事故。第一个是忘记html里面符号的变换了，还有910这个人的ID全是数字，害得我不得不重写了一个pattern...</code></p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#网址清理，用于进入选手个人界面</span>    statsuffix = <span class="hljs-built_in">id</span>.replace(<span class="hljs-string">&#x27;amp;&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)    driver.get(webfront+statsuffix)    content = driver.page_source    <span class="hljs-comment">#获取选手面板数据，rating已经统计不被需要</span>    Playerstatform=re.findall(<span class="hljs-string">&#x27;class=&quot;summaryStatBreakdownDataValue&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    DPR = Playerstatform[<span class="hljs-number">1</span>]    row.append(DPR)    KAST = Playerstatform[<span class="hljs-number">2</span>]    row.append(KAST)    IMPACT = Playerstatform[<span class="hljs-number">3</span>]    row.append(IMPACT)    ADR = Playerstatform[<span class="hljs-number">4</span>]    row.append(ADR)    KPR = Playerstatform[<span class="hljs-number">5</span>]    row.append(KPR)    <span class="hljs-comment">#统计选手对阵top5数据</span>    VStop5maplist =   re.findall(<span class="hljs-string">&#x27;vs top 5 opponents&lt;/div&gt;\n                      &lt;div class=&quot;rating-maps&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    VStop5map = VStop5maplist[<span class="hljs-number">0</span>]    VStop5map = VStop5map.replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)    VStop5map = VStop5map.replace(<span class="hljs-string">&#x27; maps)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)    row.append(VStop5map)    VStop5rating = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;rating-value&quot;&gt;(.*?)&lt;/div&gt;\n                      &lt;div class=&quot;rating-description&quot;&gt;vs top 5 opponents&#x27;</span>,content)    row.append(VStop5rating[<span class="hljs-number">0</span>])    <span class="hljs-comment">#统计选手对阵top10数据</span>    VStop10maplist = re.findall(<span class="hljs-string">&#x27;vs top 10 opponents&lt;/div&gt;\n                      &lt;div class=&quot;rating-maps&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    VStop10map = VStop10maplist[<span class="hljs-number">0</span>]    VStop10map = VStop10map.replace(<span class="hljs-string">&#x27;(&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)    VStop10map = VStop10map.replace(<span class="hljs-string">&#x27; maps)&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>)    row.append(VStop10map)    VStop10rating = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;rating-value&quot;&gt;(.*?)&lt;/div&gt;\n                      &lt;div class=&quot;rating-description&quot;&gt;vs top 10 opponents&#x27;</span>,content)    row.append(VStop10rating[<span class="hljs-number">0</span>])</code></pre></div><p>接着是individual界面，统计回合击杀和场均首杀：</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#进入individual界面，统计首杀数和回合击杀</span>    driver.get(webfront+<span class="hljs-string">&quot;/individual&quot;</span>+statsuffix)    content = driver.page_source    openingkills = re.findall(<span class="hljs-string">&#x27;Total opening kills&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(openingkills[<span class="hljs-number">0</span>])    round0kill = re.findall(<span class="hljs-string">&#x27;0 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round0kill[<span class="hljs-number">0</span>])    round1kill = re.findall(<span class="hljs-string">&#x27;1 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round1kill[<span class="hljs-number">0</span>])    round2kill = re.findall(<span class="hljs-string">&#x27;2 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round2kill[<span class="hljs-number">0</span>])    round3kill = re.findall(<span class="hljs-string">&#x27;3 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round3kill[<span class="hljs-number">0</span>])    round4kill = re.findall(<span class="hljs-string">&#x27;4 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round4kill[<span class="hljs-number">0</span>])    round5kill = re.findall(<span class="hljs-string">&#x27;5 kill rounds&lt;/span&gt;&lt;span&gt;(.*?)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    row.append(round5kill[<span class="hljs-number">0</span>])</code></pre></div><p>接着是matches界面，统计rating相关的稳定性和获胜地图rating。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#进入match界面，统计对局的小局rating和获胜地图rating</span>    driver.get(webfront+<span class="hljs-string">&quot;/matches&quot;</span>+statsuffix)    content = driver.page_source    singlemaprating = re.findall(<span class="hljs-string">&#x27;data-sort-column-key=&quot;rating&quot;&gt;(.*?)&lt;/td&gt;&#x27;</span>,content)    singlemapround = re.findall(<span class="hljs-string">r&#x27;&lt;/span&gt;&lt;/a&gt;&lt;span&gt; \((.*?)\)&lt;/span&gt;&lt;/div&gt;&#x27;</span>,content)    singlemapwinround = <span class="hljs-number">0</span>    singlemapwinrating = <span class="hljs-number">0</span>    ratingabove085 = <span class="hljs-number">0</span>    ratingabove100 = <span class="hljs-number">0</span>    ratingabove115 = <span class="hljs-number">0</span>    ratingabove130 = <span class="hljs-number">0</span>    tempzz4 = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> singlemaprating:        rating1 = <span class="hljs-built_in">float</span>(i)        <span class="hljs-keyword">if</span> <span class="hljs-built_in">float</span>(singlemapround[<span class="hljs-number">2</span>*tempzz4]) &gt; <span class="hljs-built_in">float</span>(singlemapround[<span class="hljs-number">2</span>*tempzz4+<span class="hljs-number">1</span>]) :            totalround = <span class="hljs-built_in">float</span>(singlemapround[<span class="hljs-number">2</span>*tempzz4]) + <span class="hljs-built_in">float</span>(singlemapround[<span class="hljs-number">2</span>*tempzz4+<span class="hljs-number">1</span>])            singlemapwinround = singlemapwinround + totalround             singlemapwinrating = singlemapwinrating + (totalround * rating1)        <span class="hljs-keyword">if</span> rating1 &gt;= <span class="hljs-number">0.85</span>:            ratingabove085 += <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> rating1 &gt;= <span class="hljs-number">1</span>:            ratingabove100 += <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> rating1 &gt;= <span class="hljs-number">1.15</span>:            ratingabove115 += <span class="hljs-number">1</span>        <span class="hljs-keyword">if</span> rating1 &gt;= <span class="hljs-number">1.30</span>:            ratingabove130 += <span class="hljs-number">1</span>         tempzz4 = tempzz4 + <span class="hljs-number">1</span>    row.append(ratingabove085)    row.append(ratingabove100)    row.append(ratingabove115)    row.append(ratingabove130)</code></pre></div><p>然后是clutch页面。这个页面的网址跟前面都不太一样，所以需要一个pattern。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#统计选手残局获胜次数</span>    pattern = <span class="hljs-string">r&quot;(/[0-9]+)&quot;</span>    driver.get(webfront+<span class="hljs-string">&quot;/clutches&quot;</span>+re.sub(pattern,<span class="hljs-string">r&#x27;\1&#x27;</span>+<span class="hljs-string">&quot;/1on1&quot;</span>,statsuffix,<span class="hljs-number">1</span>))    content = driver.page_source    clutch1v1win = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;value&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    row.append(clutch1v1win[<span class="hljs-number">0</span>])    driver.get(webfront+<span class="hljs-string">&quot;/clutches&quot;</span>+re.sub(pattern,<span class="hljs-string">r&#x27;\1&#x27;</span>+<span class="hljs-string">&quot;/1on2&quot;</span>,statsuffix,<span class="hljs-number">1</span>))    content = driver.page_source    clutch1v2win = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;value&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    row.append(clutch1v2win[<span class="hljs-number">0</span>])    driver.get(webfront+<span class="hljs-string">&quot;/clutches&quot;</span>+re.sub(pattern,<span class="hljs-string">r&#x27;\1&#x27;</span>+<span class="hljs-string">&quot;/1on3&quot;</span>,statsuffix,<span class="hljs-number">1</span>))    content = driver.page_source    clutch1v3win = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;value&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    row.append(clutch1v3win[<span class="hljs-number">0</span>])    driver.get(webfront+<span class="hljs-string">&quot;/clutches&quot;</span>+re.sub(pattern,<span class="hljs-string">r&#x27;\1&#x27;</span>+<span class="hljs-string">&quot;/1on4&quot;</span>,statsuffix,<span class="hljs-number">1</span>))    content = driver.page_source    clutch1v4win = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;value&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    row.append(clutch1v4win[<span class="hljs-number">0</span>])    driver.get(webfront+<span class="hljs-string">&quot;/clutches&quot;</span>+re.sub(pattern,<span class="hljs-string">r&#x27;\1&#x27;</span>+<span class="hljs-string">&quot;/1on5&quot;</span>,statsuffix,<span class="hljs-number">1</span>))    content = driver.page_source    clutch1v5win = re.findall(<span class="hljs-string">&#x27;&lt;div class=&quot;value&quot;&gt;(.*?)&lt;/div&gt;&#x27;</span>,content)    row.append(clutch1v5win[<span class="hljs-number">0</span>])</code></pre></div><p>然后是上传没有上传的bigevent等数据。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#上传bigevent等数据</span>    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Bigeventname,Bigeventmap,Bigeventrating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Eliteeventname,Eliteeventmap,Eliteeventrating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Supereliteeventname,Supereliteeventmap,Supereliteeventrating):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        rating1=rating1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Bigeventplayoffname,Bigeventplayoffmap,Bigeventplayoffratingsum,Bigeventplayoffrounds):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1/round1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Eliteeventplayoffname,Eliteeventplayoffmap,Eliteeventplayoffratingsum,Eliteeventplayoffrounds):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1/round1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    ishere = <span class="hljs-number">0</span>    <span class="hljs-keyword">for</span> name1,map1,rating1,round1 <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(Supereliteeventplayoffname,Supereliteeventplayoffmap,Supereliteeventplayoffratingsum,Supereliteeventplayoffrounds):        name1=name1.split(keyword, <span class="hljs-number">1</span>)[-<span class="hljs-number">1</span>].strip()        <span class="hljs-keyword">if</span> name1 == name:            row.append(map1)            row.append(rating1/round1)            ishere = <span class="hljs-number">1</span>            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">if</span> ishere ==<span class="hljs-number">0</span>:        row.append(<span class="hljs-number">0</span>)        row.append(<span class="hljs-string">&quot;NAN&quot;</span>)    row.append(singlemapwinrating/singlemapwinround) <span class="hljs-comment">#后加的上传获胜地图rating</span>    <span class="hljs-built_in">print</span>(row) <span class="hljs-comment">#用于测试</span>    ws.append(row) <span class="hljs-comment">#在表格中打印</span></code></pre></div><p>最后表存一下，关闭游览器，大功告成。</p><div class="code-wrapper"><pre><code class="hljs py"><span class="hljs-comment">#保存表格</span>wb.save(file_path)<span class="hljs-comment"># 关闭浏览器 </span>driver.close()            driver.quit()</code></pre></div><p><strong>如果对你有帮助的话，欢迎留言</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Codes</tag>
      
      <tag>Games</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
